name: Release - CI
on:
  push:
    branches: [ main ]
    tags: 
      - 'v*.*.*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Build,Deploy
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Get the version
      id: get_version
      run: |
        arrTag=(${GITHUB_REF//\// })
        VERSION="${arrTag[2]}"
        VERSION="${VERSION//v}"
        echo VERSION:${VERSION}
        echo ::set-output name=VERSION::${VERSION}
      shell: bash
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: "15"
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        include-prerelease: false
    - name: Set build number 
      if: matrix.os == 'ubuntu-latest'
      run: echo "BuildNumber=$(( $GITHUB_RUN_NUMBER +  2))" >> $GITHUB_ENV
    - name: Build
      run: |
        dotnet build --configuration Release --framework net6.0 -p:Version=${{ steps.get_version.outputs.VERSION }}
    - name: Deploy release NuGet packages
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet pack -c Release --no-restore --no-build -p:Version=${{ steps.get_version.outputs.VERSION }} -p:TreatWarningsAsErrors=false
        dotnet nuget push './src/**/*.nupkg' -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate
